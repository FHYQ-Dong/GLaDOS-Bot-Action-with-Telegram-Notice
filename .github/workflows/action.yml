name: 'GLaDOS Bot Action with Telegram Notice'

on:
  push:
  schedule:
    - cron: '30 1 * * *'

jobs:
  bot:
    name: Sign in
    runs-on: ubuntu-latest
    env:
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      CHAT_ID: ${{ secrets.CHAT_ID }}
      COOKIE: ${{ secrets.COOKIE }}

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
      
    - name: Cache
      uses: actions/cache@v2
      id: cache-venv  # name for referring later
      with:
        path: ./.venv/  # what we cache: the virtualenv
        # The cache key depends on requirements.txt
        key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-venv-

    # Build a virtualenv, but only if it doesn't already exist
    - name: Install dependencies
      run: |
        python -m venv ./.venv
        . ./.venv/bin/activate
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      if: steps.cache-venv.outputs.cache-hit != 'true'

    # Run tests
    # Note that you have to activate the virtualenv in every step
    # because GitHub actions doesn't preserve the environment
    - name: Sign in
      run: |
        . ./.venv/bin/activate
        python ./signin.py $COOKIE

    - name: Telegram notice
      env: 
        message: $(<result.txt)
      uses: appleboy/telegram-action@master
        with:
          to: $CHAT_ID
          token: $BOT_TOKEN
          message: $message

